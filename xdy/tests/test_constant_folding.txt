0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

0 + 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

2147483647 + 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

-2147483648 + -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -2147483648

0 - 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -1

2147483647 - -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

-2147483648 - 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -2147483648

100 * 100
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 10000

32768 * 65536
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

32768 * 65537
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

200 / 100
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2

100 / 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

-2147483648 / -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

200 % 100
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

100 % 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

0 ^ 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

0 ^ 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

0 ^ -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

1 ^ 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

1 ^ 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

1 ^ -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

1 ^ -2
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

(-1) ^ 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

(-1) ^ 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -1

(-1) ^ 2
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

(-1) ^ -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -1

(-1) ^ -2
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

10 ^ 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

10 ^ 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1000

10 ^ 10000
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

10 ^ -1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

-0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

-1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return -1

-(-2147483648)
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2147483647

1 + 2 - 3 + 4 - 5 + 6 - 7 + 8 - 9 + 10
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 7

x: 1 + 4 + {x} + 4 + 9
=
Function(x@0) r#4 ⚅#0
	extern[]
	body:
		@1 <- 5 + @0
		@2 <- @1 + 4
		@3 <- @2 + 9
		return @3

1 + 4 + {x} + 4 + 9
=
Function() r#4 ⚅#0
	extern[x@0]
	body:
		@1 <- 5 + @0
		@2 <- @1 + 4
		@3 <- @2 + 9
		return @3

[5:10]
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 5:10
		@0 <- sum rolling record ⚅0
		return @0

[7:7]
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 7

[5:4]
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

1D6
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 1D6
		@0 <- sum rolling record ⚅0
		return @0

3D6
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- sum rolling record ⚅0
		return @0

0D100
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

100D0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

100D1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 100

3D6 drop lowest 1
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		⚅0 <- drop lowest 1 from ⚅0
		@0 <- sum rolling record ⚅0
		return @0

3D6 drop lowest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

3D6 drop lowest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

0D6 drop lowest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

6D0 drop lowest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

8D1 drop lowest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 3

3D6 drop highest 1
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		⚅0 <- drop highest 1 from ⚅0
		@0 <- sum rolling record ⚅0
		return @0

3D6 drop highest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

3D6 drop highest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

10D10 drop lowest (1 + 3)
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 10D10
		⚅0 <- drop lowest 4 from ⚅0
		@0 <- sum rolling record ⚅0
		return @0

0D6 drop highest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

6D0 drop highest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

8D1 drop highest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 3

10D10 drop highest (1 + 3)
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 10D10
		⚅0 <- drop highest 4 from ⚅0
		@0 <- sum rolling record ⚅0
		return @0

8D1 drop lowest 3 drop highest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2

8D1 drop highest 3 drop lowest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2

{x}D(3 + 3)
=
Function() r#2 ⚅#1
	extern[x@0]
	body:
		⚅0 <- roll standard dice @0D6
		@1 <- sum rolling record ⚅0
		return @1

{x}D0
=
Function() r#1 ⚅#0
	extern[x@0]
	body:
		return 0

{x}D(-1)
=
Function() r#1 ⚅#0
	extern[x@0]
	body:
		return 0

{x}D1
=
Function() r#2 ⚅#1
	extern[x@0]
	body:
		⚅0 <- roll standard dice @0D1
		@1 <- sum rolling record ⚅0
		return @1

0D{x}
=
Function() r#1 ⚅#0
	extern[x@0]
	body:
		return 0

(-1)D{x}
=
Function() r#1 ⚅#0
	extern[x@0]
	body:
		return 0

1D[0, 0, 0, 1, 1, 2]
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice 1D[0, 0, 0, 1, 1, 2]
		@0 <- sum rolling record ⚅0
		return @0

0D[0, 0, 0, 1, 1, 2]
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

5D[1]
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 5

8D[3, 3, 3]
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 24

5D[1, 2, 3] drop lowest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

5D[1, 2, 3] drop lowest 6
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

5D[1, 1, 1] drop lowest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2

5D[1, 2, 3] drop highest 5
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

5D[1, 2, 3] drop highest 6
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

5D[1, 1, 1] drop highest 3
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 2

5D[5, 5, 5, 5] drop highest 3 drop lowest 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 5

5D[5, 5, 5, 5] drop lowest 3 drop highest 1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 5

3D1 + 7
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 10

7 + 3D1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 10
