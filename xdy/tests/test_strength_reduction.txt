0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 0

x: 0 + {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} + 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} + 1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 + 1
		return @1

x: 0 - {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: {x} - 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} - {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} - 1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 1
		return @1

x: 0 * {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} * 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: 1 * {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} * 1
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: -1 * {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: {x} * -1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: {x} * 2
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 + @0
		return @1

x: 2 * {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 + @0
		return @1

x: {x} * 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 * 3
		return @1

x: 0 / {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} / 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} / 1
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} / -1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: {x} / {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 1

x: {x} / 2
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 / 2
		return @1

x: 0 % {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} % 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} % 1
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 0

x: {x} % 2
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 % 2
		return @1

0 ^ 0
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 1

x: 0 ^ {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- 0 ^ @0
		return @1

x: 1 ^ {x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 1

x: {x} ^ 0
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return 1

x: {x} ^ 1
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x} ^ 2
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 * @0
		return @1

x: {x} ^ 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 ^ 3
		return @1

x: {x} ^ -1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 ^ -1
		return @1

x: -{x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: --{x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: ---{x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- -@0
		return @1

x: ----{x}
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: --{x} + 2
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 + 2
		return @1

x: [{x}:{x}]
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x, y: [{x}:{y}]
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll range @0:@1
		@2 <- sum rolling record ⚅0
		return @2

x: {x}D1
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

1D6
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:6
		@0 <- sum rolling record ⚅0
		return @0

x: 1D{x}
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:@0
		@1 <- sum rolling record ⚅0
		return @1

x, y: {x}D{y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice @0D@1
		@2 <- sum rolling record ⚅0
		return @2

10D1
=
Function() r#0 ⚅#0
	extern[]
	body:
		return 10

x: {x}D[1]
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x}D[1, 1, 1]
=
Function(x@0) r#1 ⚅#0
	extern[]
	body:
		return @0

x: {x}D[5, 5, 5, 5, 5]
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 * 5
		return @1

x: 1D[3, 4, 5, 6]
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 3:6
		@1 <- sum rolling record ⚅0
		return @1

x: {x}D[1, 2, 3]
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice @0D3
		@1 <- sum rolling record ⚅0
		return @1

x: {x}D[3, 4, 5, 6, 7, 8]
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[3, 4, 5, 6, 7, 8]
		@1 <- sum rolling record ⚅0
		return @1

x: {x}D[1, 1, 2, 3, 5, 8]
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[1, 1, 2, 3, 5, 8]
		@1 <- sum rolling record ⚅0
		return @1

x: 10D1 drop lowest {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- 10 - @0
		return @1

x, y: {x}D1 drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#0
	extern[]
	body:
		@2 <- @0 - @1
		return @2

x: 1D{x} drop lowest 1
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:@0
		⚅0 <- drop lowest 1 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x: {x}D1 drop lowest 1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 1
		return @1

x, y: 1D{x} drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:@0
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: 3D{x} drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D@0
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

3D6 drop lowest 0
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- sum rolling record ⚅0
		return @0

3D6 drop lowest 1 drop lowest 1
=
Function() r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- 1 + 1
		⚅0 <- drop lowest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

3D6 drop lowest 1 drop lowest (-1)
=
Function() r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- 1 + -1
		⚅0 <- drop lowest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x: 10D1 drop highest {x}
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- 10 - @0
		return @1

x, y: {x}D1 drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#0
	extern[]
	body:
		@2 <- @0 - @1
		return @2

x: 1D{x} drop highest 1
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:@0
		⚅0 <- drop highest 1 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x: {x}D1 drop highest 1
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 1
		return @1

x, y: 1D{x} drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 1:@0
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: 3D{x} drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D@0
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

3D6 drop highest 0
=
Function() r#1 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- sum rolling record ⚅0
		return @0

3D6 drop highest 1 drop highest 1
=
Function() r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- 1 + 1
		⚅0 <- drop highest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

3D6 drop highest 1 drop highest (-1)
=
Function() r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 3D6
		@0 <- 1 + -1
		⚅0 <- drop highest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x: 10D1 drop lowest {x} drop highest 1
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- 10 - @0
		@2 <- @1 - 1
		return @2

x: 10D1 drop lowest 1 drop highest {x}
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- 10 - 1
		@2 <- @1 - @0
		return @2

x: {x}D[1] drop lowest 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 3
		return @1

x: {x}D[1, 1, 1] drop lowest 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 3
		return @1

x: {x}D[5, 5, 5, 5, 5] drop lowest 5
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- @0 * 5
		@2 <- @1 - 5
		return @2

x: 1D[3, 4, 5, 6] drop lowest {x}
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 3:6
		⚅0 <- drop lowest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x, y: {x}D[1, 2, 3] drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice @0D3
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[3, 4, 5, 6, 7, 8] drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[3, 4, 5, 6, 7, 8]
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[1, 1, 2, 3, 5, 8] drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[1, 1, 2, 3, 5, 8]
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x: {x}D[1] drop highest 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 3
		return @1

x: {x}D[1, 1, 1] drop highest 3
=
Function(x@0) r#2 ⚅#0
	extern[]
	body:
		@1 <- @0 - 3
		return @1

x: {x}D[5, 5, 5, 5, 5] drop highest 5
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- @0 * 5
		@2 <- @1 - 5
		return @2

x: 1D[3, 4, 5, 6] drop highest {x}
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 3:6
		⚅0 <- drop highest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x, y: {x}D[1, 2, 3] drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice @0D3
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[3, 4, 5, 6, 7, 8] drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[3, 4, 5, 6, 7, 8]
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[1, 1, 2, 3, 5, 8] drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[1, 1, 2, 3, 5, 8]
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x: {x}D[1] drop highest 1 drop lowest 1
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- @0 - 1
		@2 <- @1 - 1
		return @2

x: {x}D[1, 1, 1] drop highest 1 drop lowest 1
=
Function(x@0) r#3 ⚅#0
	extern[]
	body:
		@1 <- @0 - 1
		@2 <- @1 - 1
		return @2

x: {x}D[5, 5, 5, 5, 5] drop lowest 1 drop highest 1
=
Function(x@0) r#4 ⚅#0
	extern[]
	body:
		@1 <- @0 * 5
		@2 <- @1 - 1
		@3 <- @2 - 1
		return @3

x: 1D[3, 4, 5, 6] drop highest {x} drop lowest {x}
=
Function(x@0) r#2 ⚅#1
	extern[]
	body:
		⚅0 <- roll range 3:6
		⚅0 <- drop highest @0 from ⚅0
		⚅0 <- drop lowest @0 from ⚅0
		@1 <- sum rolling record ⚅0
		return @1

x, y: {x}D[1, 2, 3] drop highest {y} drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice @0D3
		⚅0 <- drop highest @1 from ⚅0
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[3, 4, 5, 6, 7, 8] drop highest {y} drop lowest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[3, 4, 5, 6, 7, 8]
		⚅0 <- drop highest @1 from ⚅0
		⚅0 <- drop lowest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: {x}D[1, 1, 2, 3, 5, 8] drop lowest {y} drop highest {y}
=
Function(x@0, y@1) r#3 ⚅#1
	extern[]
	body:
		⚅0 <- roll custom dice @0D[1, 1, 2, 3, 5, 8]
		⚅0 <- drop lowest @1 from ⚅0
		⚅0 <- drop highest @1 from ⚅0
		@2 <- sum rolling record ⚅0
		return @2

x, y: 20D10 drop lowest {x} drop lowest {y} drop highest {x} drop highest {y}
=
Function(x@0, y@1) r#5 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 20D10
		@2 <- @0 + @1
		⚅0 <- drop lowest @2 from ⚅0
		@3 <- @0 + @1
		⚅0 <- drop highest @3 from ⚅0
		@4 <- sum rolling record ⚅0
		return @4

x, y: 20D10 drop highest {x} drop highest {y} drop lowest {x} drop lowest {y}
=
Function(x@0, y@1) r#5 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 20D10
		@2 <- @0 + @1
		⚅0 <- drop highest @2 from ⚅0
		@3 <- @0 + @1
		⚅0 <- drop lowest @3 from ⚅0
		@4 <- sum rolling record ⚅0
		return @4

x, y: 20D10 drop highest {x} drop lowest {y} drop highest {x} drop lowest {y}
=
Function(x@0, y@1) r#5 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 20D10
		@2 <- @0 + @0
		⚅0 <- drop highest @2 from ⚅0
		@3 <- @1 + @1
		⚅0 <- drop lowest @3 from ⚅0
		@4 <- sum rolling record ⚅0
		return @4

x, y: 20D10 drop lowest {x} drop highest {y} drop lowest {x} drop highest {y}
=
Function(x@0, y@1) r#5 ⚅#1
	extern[]
	body:
		⚅0 <- roll standard dice 20D10
		@2 <- @0 + @0
		⚅0 <- drop lowest @2 from ⚅0
		@3 <- @1 + @1
		⚅0 <- drop highest @3 from ⚅0
		@4 <- sum rolling record ⚅0
		return @4
